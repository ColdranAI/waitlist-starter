# ================================
# DATABASE CONFIGURATION
# ================================
# PostgreSQL database connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://username:password@localhost:5432/waitlist"

# ================================
# REDIS CONFIGURATION
# ================================
# Redis connection string (supports both redis:// and rediss:// for TLS)
# Local Redis: redis://localhost:6379
# Upstash Redis via Redis protocol: rediss://default:password@host:6379
REDIS_URL="redis://localhost:6379"

# ================================
# CLOUDFLARE TURNSTILE (Bot Protection)
# ================================
# Get these from: https://dash.cloudflare.com/profile/api-tokens
# Create a new Turnstile site to get these keys

# Frontend site key (public - for widget rendering)
NEXT_PUBLIC_TURNSTILE_SITE_KEY="1x00000000000000000000AA"

# Backend secret key (private - for token verification)
TURNSTILE_SECRET_KEY="1x0000000000000000000000000000000AA"

# ================================
# NEXT.JS CONFIGURATION
# ================================
# Environment (development, production)
NODE_ENV="development"

# Your app's public URL (for metadata and redirects)
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Discord community invite link (optional)
NEXT_PUBLIC_DISCORD_INVITE="https://discord.gg/your-invite-code"

# ================================
# CLOUDFLARE SETUP CHECKLIST
# ================================
# 1. ✅ Move your domain's nameservers to Cloudflare
# 2. ✅ Enable orange cloud (proxy) for your domain in DNS tab
# 3. ✅ Create Turnstile site at https://dash.cloudflare.com/
# 4. ✅ Add TURNSTILE_SITE_KEY and TURNSTILE_SECRET_KEY above
# 5. ✅ Ensure all requests go through Cloudflare for IP detection

# ================================
# SECURITY FEATURES ENABLED
# ================================
# ✅ Cloudflare as reverse proxy (WAF, DDoS protection)
# ✅ Turnstile bot protection
# ✅ Real IP detection behind Cloudflare (cf-connecting-ip)
# ✅ Redis-based rate limiting (10 requests/minute per IP)
# ✅ Unique email constraint in PostgreSQL
# ✅ Automatic duplicate email handling